<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - USR_BANK_STATEMENT_D - Bank statement details
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.UsrBankStatementD" table="USR_BANK_STATEMENT_D" lazy="false">
		<meta attribute="class-description" inherit="false">Bank statement details</meta>

		<id name="bankStatementDId" column="BANK_STATEMENT_D_ID" type="java.lang.String" length="30"></id>

		<property name="bankStatementId" column="BANK_STATEMENT_ID" not-null="true" type="java.lang.String" length="30"/>
		<property name="procAmt" column="PROC_AMT" not-null="true" type="java.lang.Double"/>
		<property name="procDate" column="PROC_DATE" not-null="true" type="java.util.Date"/>
		<property name="rowIndex" column="ROW_INDEX" not-null="true" type="java.lang.Double"/>
		<property name="balance" column="BALANCE" type="java.lang.Double"/>
		<property name="insertDate" column="INSERT_DATE" type="java.util.Date"/>
		<property name="insertUserId" column="INSERT_USER_ID" type="java.lang.String" length="30"/>
		<property name="isAllocated" column="IS_ALLOCATED" type="java.lang.String" length="1"/>
		<property name="procDescription" column="PROC_DESCRIPTION" type="java.lang.String" length="1000"/>
		<property name="updateDate" column="UPDATE_DATE" type="java.util.Date"/>
		<property name="updateUserId" column="UPDATE_USER_ID" type="java.lang.String" length="30"/>
		<property name="userDescription" column="USER_DESCRIPTION" type="java.lang.String" length="500"/>
	</class>

	<sql-query name="usrBankStatementD.selectAll">
	<![CDATA[
		SELECT BANK_STATEMENT_ID,
		       BANK_STATEMENT_D_ID,
		       PROC_AMT,
		       TO_CHAR(PROC_DATE, 'yyyymmddhh24miss') AS PROC_DATE,
		       ROW_INDEX,
		       BALANCE,
		       TO_CHAR(INSERT_DATE, 'yyyymmddhh24miss') AS INSERT_DATE,
		       INSERT_USER_ID,
		       IS_ALLOCATED,
		       PROC_DESCRIPTION,
		       TO_CHAR(UPDATE_DATE, 'yyyymmddhh24miss') AS UPDATE_DATE,
		       UPDATE_USER_ID,
		       USER_DESCRIPTION
		  FROM USR_BANK_STATEMENT_D
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
		 FOR UPDATE
	]]>
	</sql-query>

	<sql-query name="usrBankStatementD.insert">
	<![CDATA[
		INSERT INTO USR_BANK_STATEMENT_D (
		       BANK_STATEMENT_ID,
		       BANK_STATEMENT_D_ID,
		       PROC_AMT,
		       PROC_DATE,
		       ROW_INDEX,
		       BALANCE,
		       INSERT_DATE,
		       INSERT_USER_ID,
		       IS_ALLOCATED,
		       PROC_DESCRIPTION,
		       UPDATE_DATE,
		       UPDATE_USER_ID,
		       USER_DESCRIPTION
		       )
		VALUES (
		       ${BANK_STATEMENT_ID},
		       ${BANK_STATEMENT_D_ID},
		       ${PROC_AMT},
		       ${PROC_DATE},
		       ${ROW_INDEX},
		       ${BALANCE},
		       ${INSERT_DATE},
		       ${INSERT_USER_ID},
		       ${IS_ALLOCATED},
		       ${PROC_DESCRIPTION},
		       ${UPDATE_DATE},
		       ${UPDATE_USER_ID},
		       ${USER_DESCRIPTION}
		       )
	]]>
	</sql-query>

	<sql-query name="usrBankStatementD.update">
	<![CDATA[
		UPDATE USR_BANK_STATEMENT_D
		   SET BANK_STATEMENT_ID = ${BANK_STATEMENT_ID},
		       PROC_AMT = ${PROC_AMT},
		       PROC_DATE = ${PROC_DATE},
		       ROW_INDEX = ${ROW_INDEX},
		       BALANCE = ${BALANCE},
		       INSERT_DATE = ${INSERT_DATE},
		       INSERT_USER_ID = ${INSERT_USER_ID},
		       IS_ALLOCATED = ${IS_ALLOCATED},
		       PROC_DESCRIPTION = ${PROC_DESCRIPTION},
		       UPDATE_DATE = ${UPDATE_DATE},
		       UPDATE_USER_ID = ${UPDATE_USER_ID},
		       USER_DESCRIPTION = ${USER_DESCRIPTION}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="usrBankStatementD.updateColumns">
	<![CDATA[
		UPDATE USR_BANK_STATEMENT_D
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="usrBankStatementD.delete">
	<![CDATA[
		DELETE USR_BANK_STATEMENT_D
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>