<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - USR_EMPLOYEE - Employee Master
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.UsrEmployee" table="USR_EMPLOYEE" lazy="false">
		<meta attribute="class-description" inherit="false">Employee Master</meta>

		<id name="employeeId" column="EMPLOYEE_ID" type="java.lang.String" length="30"></id>

		<property name="givenName" column="GIVEN_NAME" not-null="true" type="java.lang.String" length="30"/>
		<property name="isActive" column="IS_ACTIVE" not-null="true" type="java.lang.String" length="30"/>
		<property name="orgId" column="ORG_ID" not-null="true" type="java.lang.String" length="30"/>
		<property name="surname" column="SURNAME" not-null="true" type="java.lang.String" length="30"/>
		<property name="visaType" column="VISA_TYPE" not-null="true" type="java.lang.String" length="30"/>
		<property name="wageType" column="WAGE_TYPE" not-null="true" type="java.lang.String" length="30"/>
		<property name="address" column="ADDRESS" type="java.lang.String" length="1000"/>
		<property name="dateOfBirth" column="DATE_OF_BIRTH" type="java.util.Date"/>
		<property name="description" column="DESCRIPTION" type="java.lang.String" length="1000"/>
		<property name="endDate" column="END_DATE" type="java.util.Date"/>
		<property name="hourlyRate" column="HOURLY_RATE" type="java.lang.Double"/>
		<property name="insertDate" column="INSERT_DATE" type="java.util.Date"/>
		<property name="insertUserId" column="INSERT_USER_ID" type="java.lang.String" length="30"/>
		<property name="startDate" column="START_DATE" type="java.util.Date"/>
		<property name="tfn" column="TFN" type="java.lang.String" length="30"/>
		<property name="updateDate" column="UPDATE_DATE" type="java.util.Date"/>
		<property name="updateUserId" column="UPDATE_USER_ID" type="java.lang.String" length="30"/>
	</class>

	<sql-query name="usrEmployee.selectAll">
	<![CDATA[
		SELECT EMPLOYEE_ID,
		       GIVEN_NAME,
		       IS_ACTIVE,
		       ORG_ID,
		       SURNAME,
		       VISA_TYPE,
		       WAGE_TYPE,
		       ADDRESS,
		       TO_CHAR(DATE_OF_BIRTH, 'yyyymmddhh24miss') AS DATE_OF_BIRTH,
		       DESCRIPTION,
		       TO_CHAR(END_DATE, 'yyyymmddhh24miss') AS END_DATE,
		       HOURLY_RATE,
		       TO_CHAR(INSERT_DATE, 'yyyymmddhh24miss') AS INSERT_DATE,
		       INSERT_USER_ID,
		       TO_CHAR(START_DATE, 'yyyymmddhh24miss') AS START_DATE,
		       TFN,
		       TO_CHAR(UPDATE_DATE, 'yyyymmddhh24miss') AS UPDATE_DATE,
		       UPDATE_USER_ID
		  FROM USR_EMPLOYEE
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
		 FOR UPDATE
	]]>
	</sql-query>

	<sql-query name="usrEmployee.insert">
	<![CDATA[
		INSERT INTO USR_EMPLOYEE (
		       EMPLOYEE_ID,
		       GIVEN_NAME,
		       IS_ACTIVE,
		       ORG_ID,
		       SURNAME,
		       VISA_TYPE,
		       WAGE_TYPE,
		       ADDRESS,
		       DATE_OF_BIRTH,
		       DESCRIPTION,
		       END_DATE,
		       HOURLY_RATE,
		       INSERT_DATE,
		       INSERT_USER_ID,
		       START_DATE,
		       TFN,
		       UPDATE_DATE,
		       UPDATE_USER_ID
		       )
		VALUES (
		       ${EMPLOYEE_ID},
		       ${GIVEN_NAME},
		       ${IS_ACTIVE},
		       ${ORG_ID},
		       ${SURNAME},
		       ${VISA_TYPE},
		       ${WAGE_TYPE},
		       ${ADDRESS},
		       ${DATE_OF_BIRTH},
		       ${DESCRIPTION},
		       ${END_DATE},
		       ${HOURLY_RATE},
		       ${INSERT_DATE},
		       ${INSERT_USER_ID},
		       ${START_DATE},
		       ${TFN},
		       ${UPDATE_DATE},
		       ${UPDATE_USER_ID}
		       )
	]]>
	</sql-query>

	<sql-query name="usrEmployee.update">
	<![CDATA[
		UPDATE USR_EMPLOYEE
		   SET GIVEN_NAME = ${GIVEN_NAME},
		       IS_ACTIVE = ${IS_ACTIVE},
		       ORG_ID = ${ORG_ID},
		       SURNAME = ${SURNAME},
		       VISA_TYPE = ${VISA_TYPE},
		       WAGE_TYPE = ${WAGE_TYPE},
		       ADDRESS = ${ADDRESS},
		       DATE_OF_BIRTH = ${DATE_OF_BIRTH},
		       DESCRIPTION = ${DESCRIPTION},
		       END_DATE = ${END_DATE},
		       HOURLY_RATE = ${HOURLY_RATE},
		       INSERT_DATE = ${INSERT_DATE},
		       INSERT_USER_ID = ${INSERT_USER_ID},
		       START_DATE = ${START_DATE},
		       TFN = ${TFN},
		       UPDATE_DATE = ${UPDATE_DATE},
		       UPDATE_USER_ID = ${UPDATE_USER_ID}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="usrEmployee.updateColumns">
	<![CDATA[
		UPDATE USR_EMPLOYEE
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="usrEmployee.delete">
	<![CDATA[
		DELETE USR_EMPLOYEE
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>