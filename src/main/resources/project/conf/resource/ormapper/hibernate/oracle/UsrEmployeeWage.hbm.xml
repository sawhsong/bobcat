<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - USR_EMPLOYEE_WAGE - Employee Wage
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.UsrEmployeeWage" table="USR_EMPLOYEE_WAGE" lazy="false">
		<meta attribute="class-description" inherit="false">Employee Wage</meta>

		<id name="wageId" column="WAGE_ID" type="java.lang.String" length="30"></id>

		<property name="employeeId" column="EMPLOYEE_ID" not-null="true" type="java.lang.String" length="30"/>
		<property name="isCompleted" column="IS_COMPLETED" not-null="true" type="java.lang.String" length="30"/>
		<property name="orgId" column="ORG_ID" not-null="true" type="java.lang.String" length="30"/>
		<property name="quarterName" column="QUARTER_NAME" not-null="true" type="java.lang.String" length="30"/>
		<property name="wageYear" column="WAGE_YEAR" not-null="true" type="java.lang.String" length="4"/>
		<property name="description" column="DESCRIPTION" type="java.lang.String" length="1000"/>
		<property name="grossWage" column="GROSS_WAGE" type="java.lang.Double"/>
		<property name="hourlyRate" column="HOURLY_RATE" type="java.lang.Double"/>
		<property name="hourWorked" column="HOUR_WORKED" type="java.lang.Double"/>
		<property name="insertDate" column="INSERT_DATE" type="java.util.Date"/>
		<property name="insertUserId" column="INSERT_USER_ID" type="java.lang.String" length="30"/>
		<property name="netWage" column="NET_WAGE" type="java.lang.Double"/>
		<property name="periodEndDate" column="PERIOD_END_DATE" type="java.util.Date"/>
		<property name="periodStartDate" column="PERIOD_START_DATE" type="java.util.Date"/>
		<property name="superAmt" column="SUPER_AMT" type="java.lang.Double"/>
		<property name="tax" column="TAX" type="java.lang.Double"/>
		<property name="updateDate" column="UPDATE_DATE" type="java.util.Date"/>
		<property name="updateUserId" column="UPDATE_USER_ID" type="java.lang.String" length="30"/>
	</class>

	<sql-query name="usrEmployeeWage.selectAll">
	<![CDATA[
		SELECT WAGE_ID,
		       EMPLOYEE_ID,
		       IS_COMPLETED,
		       ORG_ID,
		       QUARTER_NAME,
		       WAGE_YEAR,
		       DESCRIPTION,
		       GROSS_WAGE,
		       HOURLY_RATE,
		       HOUR_WORKED,
		       TO_CHAR(INSERT_DATE, 'yyyymmddhh24miss') AS INSERT_DATE,
		       INSERT_USER_ID,
		       NET_WAGE,
		       TO_CHAR(PERIOD_END_DATE, 'yyyymmddhh24miss') AS PERIOD_END_DATE,
		       TO_CHAR(PERIOD_START_DATE, 'yyyymmddhh24miss') AS PERIOD_START_DATE,
		       SUPER_AMT,
		       TAX,
		       TO_CHAR(UPDATE_DATE, 'yyyymmddhh24miss') AS UPDATE_DATE,
		       UPDATE_USER_ID
		  FROM USR_EMPLOYEE_WAGE
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
	]]>
	</sql-query>

	<sql-query name="usrEmployeeWage.insert">
	<![CDATA[
		INSERT INTO USR_EMPLOYEE_WAGE (
		       WAGE_ID,
		       EMPLOYEE_ID,
		       IS_COMPLETED,
		       ORG_ID,
		       QUARTER_NAME,
		       WAGE_YEAR,
		       DESCRIPTION,
		       GROSS_WAGE,
		       HOURLY_RATE,
		       HOUR_WORKED,
		       INSERT_DATE,
		       INSERT_USER_ID,
		       NET_WAGE,
		       PERIOD_END_DATE,
		       PERIOD_START_DATE,
		       SUPER_AMT,
		       TAX,
		       UPDATE_DATE,
		       UPDATE_USER_ID
		       )
		VALUES (
		       ${WAGE_ID},
		       ${EMPLOYEE_ID},
		       ${IS_COMPLETED},
		       ${ORG_ID},
		       ${QUARTER_NAME},
		       ${WAGE_YEAR},
		       ${DESCRIPTION},
		       ${GROSS_WAGE},
		       ${HOURLY_RATE},
		       ${HOUR_WORKED},
		       ${INSERT_DATE},
		       ${INSERT_USER_ID},
		       ${NET_WAGE},
		       ${PERIOD_END_DATE},
		       ${PERIOD_START_DATE},
		       ${SUPER_AMT},
		       ${TAX},
		       ${UPDATE_DATE},
		       ${UPDATE_USER_ID}
		       )
	]]>
	</sql-query>

	<sql-query name="usrEmployeeWage.update">
	<![CDATA[
		UPDATE USR_EMPLOYEE_WAGE
		   SET EMPLOYEE_ID = ${EMPLOYEE_ID},
		       IS_COMPLETED = ${IS_COMPLETED},
		       ORG_ID = ${ORG_ID},
		       QUARTER_NAME = ${QUARTER_NAME},
		       WAGE_YEAR = ${WAGE_YEAR},
		       DESCRIPTION = ${DESCRIPTION},
		       GROSS_WAGE = ${GROSS_WAGE},
		       HOURLY_RATE = ${HOURLY_RATE},
		       HOUR_WORKED = ${HOUR_WORKED},
		       INSERT_DATE = ${INSERT_DATE},
		       INSERT_USER_ID = ${INSERT_USER_ID},
		       NET_WAGE = ${NET_WAGE},
		       PERIOD_END_DATE = ${PERIOD_END_DATE},
		       PERIOD_START_DATE = ${PERIOD_START_DATE},
		       SUPER_AMT = ${SUPER_AMT},
		       TAX = ${TAX},
		       UPDATE_DATE = ${UPDATE_DATE},
		       UPDATE_USER_ID = ${UPDATE_USER_ID}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="usrEmployeeWage.updateColumns">
	<![CDATA[
		UPDATE USR_EMPLOYEE_WAGE
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="usrEmployeeWage.delete">
	<![CDATA[
		DELETE USR_EMPLOYEE_WAGE
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>