<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Config hbm Source
 * - SYS_REPAYMENT_TYPE - Repayment Entry Type
 */-->
<hibernate-mapping>
	<class name="project.conf.resource.ormapper.dto.oracle.SysRepaymentType" table="SYS_REPAYMENT_TYPE" lazy="false">
		<meta attribute="class-description" inherit="false">Repayment Entry Type</meta>

		<id name="repaymentTypeId" column="REPAYMENT_TYPE_ID" type="java.lang.String" length="30"></id>

		<property name="orgCategory" column="ORG_CATEGORY" not-null="true" type="java.lang.String" length="30"/>
		<property name="repaymentType" column="REPAYMENT_TYPE" not-null="true" type="java.lang.String" length="30"/>
		<property name="description" column="DESCRIPTION" not-null="true" type="java.lang.String" length="100"/>
		<property name="accountCode" column="ACCOUNT_CODE" type="java.lang.String" length="30"/>
		<property name="gstPercentage" column="GST_PERCENTAGE" type="java.lang.Double"/>
		<property name="insertDate" column="INSERT_DATE" type="java.util.Date"/>
		<property name="insertUserId" column="INSERT_USER_ID" type="java.lang.String" length="30"/>
		<property name="isApplyGst" column="IS_APPLY_GST" type="java.lang.String" length="30"/>
		<property name="parentRepaymentType" column="PARENT_REPAYMENT_TYPE" type="java.lang.String" length="30"/>
		<property name="sortOrder" column="SORT_ORDER" type="java.lang.String" length="30"/>
		<property name="updateDate" column="UPDATE_DATE" type="java.util.Date"/>
		<property name="updateUserId" column="UPDATE_USER_ID" type="java.lang.String" length="30"/>
	</class>

	<sql-query name="sysRepaymentType.selectAll">
	<![CDATA[
		SELECT REPAYMENT_TYPE_ID,
		       ORG_CATEGORY,
		       REPAYMENT_TYPE,
		       DESCRIPTION,
		       ACCOUNT_CODE,
		       GST_PERCENTAGE,
		       TO_CHAR(INSERT_DATE, 'yyyymmddhh24miss') AS INSERT_DATE,
		       INSERT_USER_ID,
		       IS_APPLY_GST,
		       PARENT_REPAYMENT_TYPE,
		       SORT_ORDER,
		       TO_CHAR(UPDATE_DATE, 'yyyymmddhh24miss') AS UPDATE_DATE,
		       UPDATE_USER_ID
		  FROM SYS_REPAYMENT_TYPE
		 WHERE 1 = 1
		 ${auto_fill}
		 ${frameworkGeneratedWhere}
		 ${frameworkGeneratedOrderBy}
		 FOR UPDATE
	]]>
	</sql-query>

	<sql-query name="sysRepaymentType.insert">
	<![CDATA[
		INSERT INTO SYS_REPAYMENT_TYPE (
		       REPAYMENT_TYPE_ID,
		       ORG_CATEGORY,
		       REPAYMENT_TYPE,
		       DESCRIPTION,
		       ACCOUNT_CODE,
		       GST_PERCENTAGE,
		       INSERT_DATE,
		       INSERT_USER_ID,
		       IS_APPLY_GST,
		       PARENT_REPAYMENT_TYPE,
		       SORT_ORDER,
		       UPDATE_DATE,
		       UPDATE_USER_ID
		       )
		VALUES (
		       ${REPAYMENT_TYPE_ID},
		       ${ORG_CATEGORY},
		       ${REPAYMENT_TYPE},
		       ${DESCRIPTION},
		       ${ACCOUNT_CODE},
		       ${GST_PERCENTAGE},
		       ${INSERT_DATE},
		       ${INSERT_USER_ID},
		       ${IS_APPLY_GST},
		       ${PARENT_REPAYMENT_TYPE},
		       ${SORT_ORDER},
		       ${UPDATE_DATE},
		       ${UPDATE_USER_ID}
		       )
	]]>
	</sql-query>

	<sql-query name="sysRepaymentType.update">
	<![CDATA[
		UPDATE SYS_REPAYMENT_TYPE
		   SET ORG_CATEGORY = ${ORG_CATEGORY},
		       REPAYMENT_TYPE = ${REPAYMENT_TYPE},
		       DESCRIPTION = ${DESCRIPTION},
		       ACCOUNT_CODE = ${ACCOUNT_CODE},
		       GST_PERCENTAGE = ${GST_PERCENTAGE},
		       INSERT_DATE = ${INSERT_DATE},
		       INSERT_USER_ID = ${INSERT_USER_ID},
		       IS_APPLY_GST = ${IS_APPLY_GST},
		       PARENT_REPAYMENT_TYPE = ${PARENT_REPAYMENT_TYPE},
		       SORT_ORDER = ${SORT_ORDER},
		       UPDATE_DATE = ${UPDATE_DATE},
		       UPDATE_USER_ID = ${UPDATE_USER_ID}
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="sysRepaymentType.updateColumns">
	<![CDATA[
		UPDATE SYS_REPAYMENT_TYPE
		   SET ${frameworkGeneratedColumnsToUpdate}
		 WHERE 1 = 1
		 ${frameworkGeneratedWhere}
	]]>
	</sql-query>

	<sql-query name="sysRepaymentType.delete">
	<![CDATA[
		DELETE SYS_REPAYMENT_TYPE
		 WHERE 1 = 1
		   ${frameworkGeneratedWhere}
	]]>
	</sql-query>
</hibernate-mapping>