<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--/*
 * Framework Generated Hibernate Query hbm Source
 * - USR_ASSET - Asset Entry (Asset data entry for all organisation category)
 */-->
<hibernate-mapping>
	<sql-query name="query.UsrAsset.getAssetSummaryDataSet">
	<![CDATA[
		select typ.asset_type_id,
		       typ.asset_type,
		       typ.description,
		       nvl(asset.asset_entry_count, 0) as asset_entry_count
		  from sys_asset_type typ,
		       (select asset_type_id,
		               count(*) as asset_entry_count
		          from usr_asset
		         where org_id = '${orgId}'
		           and asset_year = '${financialYear}'
		           and quarter_name = '${quarterName}'
		         group by asset_type_id
		       ) asset
		 where typ.org_category = '${orgCategory}'
		   and typ.asset_type_id = asset.asset_type_id(+)
		 order by sort_order
	]]>
	</sql-query>

	<sql-query name="query.UsrAsset.getAssetDataSetByCriteria">
	<![CDATA[
		select uat.asset_id,
		       uat.asset_year,
		       uat.quarter_name,
		       (select description_${langCode} from sys_common_code where code_type = 'QUARTER_NAME' and common_code = uat.quarter_name) as quarter_name_desc,
		       uat.org_id,
		       uat.asset_type_id,
		       sat.asset_type as asset_type_code,
		       sat.description as asset_type_desc,
		       sat.is_apply_gst as asset_type_is_apply_gst,
		       nvl(sat.gst_percentage, 0) as gst_percentage,
		       sat.account_code,
		       to_char(uat.asset_date, '${dateFormat}') as asset_date,
		       nvl(uat.gross_amt, 0) as gross_amt,
		       nvl(uat.gst_amt, 0) as gst_amt,
		       nvl(uat.applied_gst, 0) as applied_gst,
		       nvl(uat.net_amt, 0) as net_amt,
		       uat.is_completed,
		       uat.description,
		       (select count(*) from usr_asset_file where asset_id = uat.asset_id) as asset_file_cnt,
		       uat.insert_user_id,
		       to_char(uat.insert_date, '${dateFormat}') as insert_date,
		       uat.update_user_id,
		       to_char(uat.update_date, '${dateFormat}') as update_date,
		       to_char(nvl(uat.update_date, uat.insert_date), '${dateFormat}') as entry_date
		  from usr_asset uat,
		       sys_asset_type sat
		 where uat.asset_type_id = sat.asset_type_id
		   and uat.org_id = '${orgId}'
		   and uat.asset_year = '${financialYear}'
		   and uat.quarter_name = '${quarterName}'
		${auto_fill}
		${order_by_clause}
	]]>
	</sql-query>
</hibernate-mapping>