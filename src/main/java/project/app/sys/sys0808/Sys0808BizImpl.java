/**************************************************************************************************
 * project
 * Description - Sys0808 - Asset Type
 *	- Generated by Source Generator
 *************************************************************************************************/
package project.app.sys.sys0808;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;

import project.common.extend.BaseBiz;
import project.common.module.commoncode.CommonCodeManager;
import project.conf.resource.ormapper.dao.SysAssetType.SysAssetTypeDao;
import project.conf.resource.ormapper.dto.oracle.SysAssetType;
import zebra.data.DataSet;
import zebra.data.ParamEntity;
import zebra.data.QueryAdvisor;
import zebra.exception.FrameworkException;
import zebra.util.CommonUtil;
import zebra.util.ConfigUtil;

public class Sys0808BizImpl extends BaseBiz implements Sys0808Biz {
	@Autowired
	private SysAssetTypeDao sysAssetTypeDao;

	public ParamEntity getDefault(ParamEntity paramEntity) throws Exception {
		try {
			paramEntity.setSuccess(true);
		} catch (Exception ex) {
			throw new FrameworkException(paramEntity, ex);
		}
		return paramEntity;
	}

	public ParamEntity getList(ParamEntity paramEntity) throws Exception {
		DataSet requestDataSet = paramEntity.getRequestDataSet();
		QueryAdvisor queryAdvisor = paramEntity.getQueryAdvisor();
		HttpSession session = paramEntity.getSession();

		try {
			queryAdvisor.setObject("langCode", (String)session.getAttribute("langCode"));
			queryAdvisor.setRequestDataSet(requestDataSet);

			paramEntity.setAjaxResponseDataSet(sysAssetTypeDao.getAssetTypeDataSetByCriteria(queryAdvisor));
			paramEntity.setSuccess(true);
		} catch (Exception ex) {
			throw new FrameworkException(paramEntity, ex);
		}
		return paramEntity;
	}

	public ParamEntity getUpdate(ParamEntity paramEntity) throws Exception {
		DataSet requestDataSet = paramEntity.getRequestDataSet();
		String assetTypeId = requestDataSet.getValue("assetTypeId");
		String assetTypeCode = requestDataSet.getValue("assetTypeCode");

		try {
			paramEntity.setObject("sysAssetType", sysAssetTypeDao.getAssetTypeByKeys(assetTypeId, assetTypeCode));
			paramEntity.setSuccess(true);
		} catch (Exception ex) {
			throw new FrameworkException(paramEntity, ex);
		}
		return paramEntity;
	}

	public ParamEntity exeUpdate(ParamEntity paramEntity) throws Exception {
		DataSet requestDataSet = paramEntity.getRequestDataSet();
		HttpSession session = paramEntity.getSession();
		String assetTypeId = requestDataSet.getValue("assetTypeId");
		String assetTypeCode = requestDataSet.getValue("assetType");
		String loggedInUserId = (String)session.getAttribute("UserId");
		SysAssetType sysAssetType;
		int result = 0;

		try {
			sysAssetType = sysAssetTypeDao.getAssetTypeByKeys(assetTypeId, assetTypeCode);

			sysAssetType.setDescription(requestDataSet.getValue("description"));
			sysAssetType.setIsApplyGst(requestDataSet.getValue("isApplyGst"));
			sysAssetType.setGstPercentage(CommonUtil.toDouble(requestDataSet.getValue("gstPercentage")));
			sysAssetType.setAccountCode(requestDataSet.getValue("accountCode"));
			sysAssetType.setUpdateUserId(loggedInUserId);
			sysAssetType.setUpdateDate(CommonUtil.toDate(CommonUtil.getSysdate()));

			result = sysAssetTypeDao.updateWithKey(sysAssetType, assetTypeId, assetTypeCode);
			if (result <= 0) {
				throw new FrameworkException("E801", getMessage("E801", paramEntity));
			}

			paramEntity.setSuccess(true);
			paramEntity.setMessage("I801", getMessage("I801", paramEntity));
		} catch (Exception ex) {
			throw new FrameworkException(paramEntity, ex);
		}
		return paramEntity;
	}

	public ParamEntity exeSave(ParamEntity paramEntity) throws Exception {
		DataSet requestDataSet = paramEntity.getRequestDataSet();
		HttpSession session = paramEntity.getSession();
		String orgCategory = requestDataSet.getValue("orgCategory");
		String chkToSave = requestDataSet.getValue("chkToSave");
		String keyIds[] = CommonUtil.splitWithTrim(chkToSave, ConfigUtil.getProperty("delimiter.record"));
		String loggedInUserId = (String)session.getAttribute("UserId");
		DataSet existingData;
		SysAssetType sysAssetType;
		int resultInsert = 0;

		try {
			existingData = sysAssetTypeDao.getAssetTypeDataSetByOrgCategory(orgCategory);
			sysAssetTypeDao.deleteByOrgCategory(orgCategory);

			if (keyIds != null) {
				for (int i=0; i<keyIds.length; i++) {
					String assetTypeId = "", assetTypeCode = "";

					if (CommonUtil.startsWith(keyIds[i], "_")) {
						assetTypeId = "";
						assetTypeCode = CommonUtil.remove(keyIds[i], "_");
					} else {
						assetTypeId = CommonUtil.split(keyIds[i], "_")[0];
						assetTypeCode = CommonUtil.split(keyIds[i], "_")[1];
					}

					if (CommonUtil.isNotBlank(assetTypeId)) {
						int existingIndex = existingData.getRowIndex("ASSET_TYPE_ID", assetTypeId);
						SysAssetType existObj = (SysAssetType)existingData.getRowAsDto(existingIndex, new SysAssetType());

						existObj.setUpdateDate(CommonUtil.toDate(CommonUtil.getSysdate()));
						existObj.setUpdateUserId(loggedInUserId);
						existObj.setSortOrder(getSortOrder(orgCategory));

						resultInsert += sysAssetTypeDao.insert(existObj);
					} else {
						String uid = CommonUtil.uid();

						sysAssetType = new SysAssetType();
						sysAssetType.setAssetTypeId(uid);
						sysAssetType.setOrgCategory(orgCategory);
						sysAssetType.setAssetType(assetTypeCode);
						sysAssetType.setDescription(CommonCodeManager.getCodeDescription("ASSET_TYPE", assetTypeCode));
						sysAssetType.setIsApplyGst("Y");
						sysAssetType.setGstPercentage(10);
						sysAssetType.setSortOrder(getSortOrder(orgCategory));
						sysAssetType.setInsertUserId(loggedInUserId);
						sysAssetType.setInsertDate(CommonUtil.toDate(CommonUtil.getSysdate()));

						resultInsert += sysAssetTypeDao.insert(sysAssetType);
					}
				}

				if (resultInsert <= 0) {
					throw new FrameworkException("E801", getMessage("E801", paramEntity));
				}
			}

			paramEntity.setSuccess(true);
			paramEntity.setMessage("I801", getMessage("I801", paramEntity));
		} catch (Exception ex) {
			throw new FrameworkException(paramEntity, ex);
		}
		return paramEntity;
	}

	private String getSortOrder(String orgCategory) throws Exception {
		String ord1 = "", ord2 = "";
		DataSet ds;

		if (CommonUtil.equals(orgCategory, "A")) {
			ord1 = "01";
		} else if (CommonUtil.equals(orgCategory, "B")) {
			ord1 = "02";
		} else if (CommonUtil.equals(orgCategory, "C")) {
			ord1 = "03";
		} else if (CommonUtil.equals(orgCategory, "D")) {
			ord1 = "04";
		}

		ds = sysAssetTypeDao.getMaxSortOrderDataSetByOrgCategory(orgCategory);
		ord2 = CommonUtil.toString(CommonUtil.toInt(CommonUtil.substring(ds.getValue(0, 0), 2, 4))+1);
		ord2 = CommonUtil.leftPad(ord2, 2, "0");

		return ord1+ord2+"00";
	}
}